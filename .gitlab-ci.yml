# stages:
#   - test
# include:
#   - template: Jobs/Code-Quality.gitlab-ci.yml
#   - template: Jobs/Dependency-Scanning.gitlab-ci.yml

# gemnasium-dependency_scanning:
#   stage: test
#   only:
#     - develop
#     - master
#   rules:
#     - if: $CI_COMMIT_BRANCH == "main"
#     - if: $CI_MERGE_REQUEST_IID

# code_quality:
#   stage: test
#   only:
#     - develop
#     - master
#   rules:
#     - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# Static Code Analysis:
#   image: node:latest
#   stage: test
#   only:
#     - develop
#     - master
#   script:
#     - npm install -g pnpm
#     - pnpm install
#     - pnpm run lint

##############################################################################
## Sans rancune, je ne suis pas un rageux mais go faire ma CI en mode chill ##
##############################################################################

stages:
  - test

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

Test CI:
  stage: test
  image: node:latest
  only:
    - messages
    - messagegrp/feat/helm-argo
  script:
    - echo "Hello, $GITLAB_USER_LOGIN!"

Buid image:
  stage: test
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build --cache-from $IMAGE_TAG -t $IMAGE_TAG .
  cache:
    key: ${CI_PIPELINE_ID}
    paths:
      - node_modules/